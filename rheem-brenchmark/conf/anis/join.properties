rheem.core.optimizer.mloptimizer = false
rheem.spark.init.ms = 460
rheem.spark.textfilesource.load.main = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"(5643.066829074087)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.759977240850472)*(in0))+(5.004437652571282E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(317.7499532420396)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(466.14605711956193)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.0546122987106153E-6)*(in0))+(635.8291131844634)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((3622.3634020732197)*(in0))+(2.151458799757324E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((678.1916399883619)*(out0))+(8913.651782357047)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.groupby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2048.0436100934835)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2629.7843565998364)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.groupby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((3279039.06505507)*(in0))+(479.0574585469194)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"((0.00571851336899711)*(in0))+(3.580793533863122E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((0.09489557454568207)*(in0))+(574.1345314920729)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.prepare = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"1.8942380443272635E8",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"((12133.311405293149)*(out0))+(4.471306668566886E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"(293.5842149249828)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(666.1822256366157)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((4.1106382983627075E-8)*(out0))+(4275373.578067317)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.init.ms = 0
rheem.spark.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.9898244759710867E-8)*(in0))+(1.5647279614356115E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.broadcast.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((6.829496965956938E-7)*(in0))+(1.0732468414268854E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.zipwithid.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.0245538558614786E-6)*(in0))+(2.5527142569582935E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.while.load = {\
 "type":"mathex",\
 "in":3,\
 "out":2,\
 "cpu":"((0.003228798808040759)*(in0))+(1.9613262217857055)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(4.643995895839295E-10)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.cache.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((9.07511325624269E-9)*(in0))+(0.07002007671366661)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"((1.6969489800146606E-9)*(in0))+(1.1844011996141071E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.413277263871954E-7)*(in0))+(5.514252745218073E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.shuffle-partition-sample.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((8.692620557232568E-6)*(in0))+(7.991184135150003)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(3.421213545477536E-7)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((658.2286222045402)*(out0))+(5.2223158608241034E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.main = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"(31.056703274082096)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.join.load = {\
 "type":"mathex",\
 "in":2,\
 "out":1,\
 "cpu":"(((2259.9426460867603)*((in0)+(in1)))+((7.212999630003157E-10)*(out0)))+(1.2263566402174884E-4)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.while.load = {\
 "type":"mathex",\
 "in":3,\
 "out":2,\
 "cpu":"((0.9559695507961907)*(in2))+(2.7020637259188744E-6)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.repeat.load = {\
 "type":"mathex",\
 "in":2,\
 "out":2,\
 "cpu":"1.4486467273939054",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2139.062954290016)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.globalreduce.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((9.788699020995737E-4)*(in0))+(0.029715868179819763)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(1230901.0768998773)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((72.46601117218665)*(in0))+(3.99965951588735E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((345.9636435697048)*(in0))+(4.137823087652023E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.count.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(12626.133315314435)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((11.004428435260895)*(out0))+(6.6381956874418505E7)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"1.4640644401035714",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.globalgroup.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.165917505748517E-9)*(in0))+(2.7555321589984435E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.union.load = {\
 "type":"mathex",\
 "in":2,\
 "out":1,\
 "cpu":"92.09804770875134",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.count.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((992.2540815879888)*(in0))+(2.1270472095471886E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.distinct.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((515.1258986489399)*(in0))+(145090.73891290912)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.prepare = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"3.598411849406966E8",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"((7392.817229490138)*(out0))+(2.733288264504815E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"(70.03001004308524)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.mappartitions.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((44867.18503696552)*(in0))+(0.00745178901293329)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.main = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(((2393.6639800518883)*(in0))+(((170.5000620769473)*(in0))*(numIterations)))+(43.24398980054286)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(240.71676262751214)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.core.optimizer.mloptimizer = false
rheem.spark.init.ms = 460
rheem.spark.textfilesource.load.main = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"(5643.066829074087)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.759977240850472)*(in0))+(5.004437652571282E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(317.7499532420396)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(466.14605711956193)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.0546122987106153E-6)*(in0))+(635.8291131844634)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((3622.3634020732197)*(in0))+(2.151458799757324E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((678.1916399883619)*(out0))+(8913.651782357047)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.groupby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2048.0436100934835)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2629.7843565998364)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.groupby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((3279039.06505507)*(in0))+(479.0574585469194)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"((0.00571851336899711)*(in0))+(3.580793533863122E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((0.09489557454568207)*(in0))+(574.1345314920729)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.prepare = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"1.8942380443272635E8",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"((12133.311405293149)*(out0))+(4.471306668566886E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"(293.5842149249828)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(666.1822256366157)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((4.1106382983627075E-8)*(out0))+(4275373.578067317)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.init.ms = 0
rheem.spark.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.9898244759710867E-8)*(in0))+(1.5647279614356115E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.broadcast.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((6.829496965956938E-7)*(in0))+(1.0732468414268854E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.zipwithid.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.0245538558614786E-6)*(in0))+(2.5527142569582935E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.while.load = {\
 "type":"mathex",\
 "in":3,\
 "out":2,\
 "cpu":"((0.003228798808040759)*(in0))+(1.9613262217857055)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(4.643995895839295E-10)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.cache.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((9.07511325624269E-9)*(in0))+(0.07002007671366661)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"((1.6969489800146606E-9)*(in0))+(1.1844011996141071E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.413277263871954E-7)*(in0))+(5.514252745218073E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.shuffle-partition-sample.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((8.692620557232568E-6)*(in0))+(7.991184135150003)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(3.421213545477536E-7)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((658.2286222045402)*(out0))+(5.2223158608241034E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.main = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"(31.056703274082096)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.join.load = {\
 "type":"mathex",\
 "in":2,\
 "out":1,\
 "cpu":"(((2259.9426460867603)*((in0)+(in1)))+((7.212999630003157E-10)*(out0)))+(1.2263566402174884E-4)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.while.load = {\
 "type":"mathex",\
 "in":3,\
 "out":2,\
 "cpu":"((0.9559695507961907)*(in2))+(2.7020637259188744E-6)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.repeat.load = {\
 "type":"mathex",\
 "in":2,\
 "out":2,\
 "cpu":"1.4486467273939054",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2139.062954290016)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.globalreduce.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((9.788699020995737E-4)*(in0))+(0.029715868179819763)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(1230901.0768998773)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((72.46601117218665)*(in0))+(3.99965951588735E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((345.9636435697048)*(in0))+(4.137823087652023E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.count.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(12626.133315314435)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((11.004428435260895)*(out0))+(6.6381956874418505E7)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"1.4640644401035714",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.globalgroup.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.165917505748517E-9)*(in0))+(2.7555321589984435E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.union.load = {\
 "type":"mathex",\
 "in":2,\
 "out":1,\
 "cpu":"92.09804770875134",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.count.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((992.2540815879888)*(in0))+(2.1270472095471886E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.distinct.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((515.1258986489399)*(in0))+(145090.73891290912)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.prepare = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"3.598411849406966E8",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"((7392.817229490138)*(out0))+(2.733288264504815E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"(70.03001004308524)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.mappartitions.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((44867.18503696552)*(in0))+(0.00745178901293329)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.main = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(((2393.6639800518883)*(in0))+(((170.5000620769473)*(in0))*(numIterations)))+(43.24398980054286)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(240.71676262751214)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.init.ms = 0
rheem.spark.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.9898244759710867E-8)*(in0))+(1.5647279614356115E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.broadcast.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((6.829496965956938E-7)*(in0))+(1.0732468414268854E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.zipwithid.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.0245538558614786E-6)*(in0))+(2.5527142569582935E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.while.load = {\
 "type":"mathex",\
 "in":3,\
 "out":2,\
 "cpu":"((0.003228798808040759)*(in0))+(1.9613262217857055)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(4.643995895839295E-10)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.cache.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((9.07511325624269E-9)*(in0))+(0.07002007671366661)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"((1.6969489800146606E-9)*(in0))+(1.1844011996141071E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.413277263871954E-7)*(in0))+(5.514252745218073E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.shuffle-partition-sample.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((8.692620557232568E-6)*(in0))+(7.991184135150003)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(3.421213545477536E-7)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((658.2286222045402)*(out0))+(5.2223158608241034E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.main = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"(31.056703274082096)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.join.load = {\
 "type":"mathex",\
 "in":2,\
 "out":1,\
 "cpu":"(((2259.9426460867603)*((in0)+(in1)))+((7.212999630003157E-10)*(out0)))+(1.2263566402174884E-4)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.while.load = {\
 "type":"mathex",\
 "in":3,\
 "out":2,\
 "cpu":"((0.9559695507961907)*(in2))+(2.7020637259188744E-6)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.repeat.load = {\
 "type":"mathex",\
 "in":2,\
 "out":2,\
 "cpu":"1.4486467273939054",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2139.062954290016)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.globalreduce.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((9.788699020995737E-4)*(in0))+(0.029715868179819763)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(1230901.0768998773)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((72.46601117218665)*(in0))+(3.99965951588735E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((345.9636435697048)*(in0))+(4.137823087652023E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.count.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(12626.133315314435)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((11.004428435260895)*(out0))+(6.6381956874418505E7)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"1.4640644401035714",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.globalgroup.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.165917505748517E-9)*(in0))+(2.7555321589984435E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.union.load = {\
 "type":"mathex",\
 "in":2,\
 "out":1,\
 "cpu":"92.09804770875134",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.count.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((992.2540815879888)*(in0))+(2.1270472095471886E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.distinct.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((515.1258986489399)*(in0))+(145090.73891290912)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.prepare = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"3.598411849406966E8",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"((7392.817229490138)*(out0))+(2.733288264504815E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"(70.03001004308524)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.mappartitions.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((44867.18503696552)*(in0))+(0.00745178901293329)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.main = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(((2393.6639800518883)*(in0))+(((170.5000620769473)*(in0))*(numIterations)))+(43.24398980054286)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(240.71676262751214)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.init.ms = 460
rheem.spark.textfilesource.load.main = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"(5643.066829074087)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.759977240850472)*(in0))+(5.004437652571282E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(317.7499532420396)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(466.14605711956193)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.0546122987106153E-6)*(in0))+(635.8291131844634)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((3622.3634020732197)*(in0))+(2.151458799757324E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((678.1916399883619)*(out0))+(8913.651782357047)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.groupby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2048.0436100934835)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2629.7843565998364)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.groupby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((3279039.06505507)*(in0))+(479.0574585469194)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"((0.00571851336899711)*(in0))+(3.580793533863122E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((0.09489557454568207)*(in0))+(574.1345314920729)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.prepare = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"1.8942380443272635E8",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"((12133.311405293149)*(out0))+(4.471306668566886E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"(293.5842149249828)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(666.1822256366157)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((4.1106382983627075E-8)*(out0))+(4275373.578067317)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.init.ms = 460
rheem.spark.textfilesource.load.main = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"(5643.066829074087)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.759977240850472)*(in0))+(5.004437652571282E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(317.7499532420396)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(466.14605711956193)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.0546122987106153E-6)*(in0))+(635.8291131844634)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((3622.3634020732197)*(in0))+(2.151458799757324E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((678.1916399883619)*(out0))+(8913.651782357047)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.groupby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2048.0436100934835)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2629.7843565998364)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.groupby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((3279039.06505507)*(in0))+(479.0574585469194)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"((0.00571851336899711)*(in0))+(3.580793533863122E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((0.09489557454568207)*(in0))+(574.1345314920729)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.prepare = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"1.8942380443272635E8",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"((12133.311405293149)*(out0))+(4.471306668566886E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"(293.5842149249828)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(666.1822256366157)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((4.1106382983627075E-8)*(out0))+(4275373.578067317)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

rheem.core.optimizer.mloptimizer = false
rheem.spark.init.ms = 460
rheem.spark.textfilesource.load.main = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"(5643.066829074087)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.759977240850472)*(in0))+(5.004437652571282E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(317.7499532420396)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(466.14605711956193)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.0546122987106153E-6)*(in0))+(635.8291131844634)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((3622.3634020732197)*(in0))+(2.151458799757324E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((678.1916399883619)*(out0))+(8913.651782357047)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.groupby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2048.0436100934835)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2629.7843565998364)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.groupby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((3279039.06505507)*(in0))+(479.0574585469194)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"((0.00571851336899711)*(in0))+(3.580793533863122E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((0.09489557454568207)*(in0))+(574.1345314920729)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.prepare = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"1.8942380443272635E8",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"((12133.311405293149)*(out0))+(4.471306668566886E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"(293.5842149249828)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(666.1822256366157)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((4.1106382983627075E-8)*(out0))+(4275373.578067317)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.init.ms = 0
rheem.spark.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.9898244759710867E-8)*(in0))+(1.5647279614356115E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.broadcast.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((6.829496965956938E-7)*(in0))+(1.0732468414268854E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.zipwithid.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.0245538558614786E-6)*(in0))+(2.5527142569582935E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.while.load = {\
 "type":"mathex",\
 "in":3,\
 "out":2,\
 "cpu":"((0.003228798808040759)*(in0))+(1.9613262217857055)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(4.643995895839295E-10)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.cache.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((9.07511325624269E-9)*(in0))+(0.07002007671366661)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"((1.6969489800146606E-9)*(in0))+(1.1844011996141071E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.413277263871954E-7)*(in0))+(5.514252745218073E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.shuffle-partition-sample.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((8.692620557232568E-6)*(in0))+(7.991184135150003)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(3.421213545477536E-7)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((658.2286222045402)*(out0))+(5.2223158608241034E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.main = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"(31.056703274082096)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.join.load = {\
 "type":"mathex",\
 "in":2,\
 "out":1,\
 "cpu":"(((2259.9426460867603)*((in0)+(in1)))+((7.212999630003157E-10)*(out0)))+(1.2263566402174884E-4)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.while.load = {\
 "type":"mathex",\
 "in":3,\
 "out":2,\
 "cpu":"((0.9559695507961907)*(in2))+(2.7020637259188744E-6)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.repeat.load = {\
 "type":"mathex",\
 "in":2,\
 "out":2,\
 "cpu":"1.4486467273939054",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2139.062954290016)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.globalreduce.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((9.788699020995737E-4)*(in0))+(0.029715868179819763)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(1230901.0768998773)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((72.46601117218665)*(in0))+(3.99965951588735E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((345.9636435697048)*(in0))+(4.137823087652023E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.count.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(12626.133315314435)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((11.004428435260895)*(out0))+(6.6381956874418505E7)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"1.4640644401035714",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.globalgroup.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((2.165917505748517E-9)*(in0))+(2.7555321589984435E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.union.load = {\
 "type":"mathex",\
 "in":2,\
 "out":1,\
 "cpu":"92.09804770875134",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.count.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((992.2540815879888)*(in0))+(2.1270472095471886E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.distinct.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((515.1258986489399)*(in0))+(145090.73891290912)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.prepare = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"3.598411849406966E8",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"((7392.817229490138)*(out0))+(2.733288264504815E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"(70.03001004308524)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.mappartitions.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((44867.18503696552)*(in0))+(0.00745178901293329)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.main = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(((2393.6639800518883)*(in0))+(((170.5000620769473)*(in0))*(numIterations)))+(43.24398980054286)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(240.71676262751214)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

rheem.core.optimizer.mloptimizer = false
rheem.core.optimizer.mloptimizer = false
rheem.core.optimizer.mloptimizer = false
rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

rheem.core.optimizer.mloptimizer = false
rheem.core.optimizer.mloptimizer = false
rheem.core.optimizer.mloptimizer = false
rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

rheem.core.optimizer.mloptimizer = false
rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

