rheem.spark.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.map.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.zipwithid.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.zipwithid.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2*out0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${600*in0 + 600*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${0.2 * in0 + 2000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}


rheem.spark.bernoulli-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.bernoulli-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.random-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.random-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.shuffle-partition-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.shuffle-partition-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${699*in0 + 500000000}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${17000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"10000",\
  "disk":"${in0}",\
  "net":"${0.3*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${300*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${400*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"200000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.count.load = {\
  "in":1, "out":1,\
  "cpu":"${1000*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"125000",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${1700*in0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${4*in0 + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.join.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.join.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cogroup.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1700 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.intersect.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.intersect.load = {\
  "in":2, "out":1,\
  "cpu":"${1300 * (in0 + in1 + out0) + 56789}",\
  "ram":"0",\
  "disk":"${20 * in0}",\
  "net":"${20 * (in0 + in1 + out0) + 430000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.cartesian.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.spark.cartesian.load = {\
  "in":2, "out":1,\
  "cpu":"${20000000*in0 + 10000000*in1 + 100*out0 + 56789}",\
  "ram":"0",\
  "disk":"0",\
  "net":"${20000*(in0 + in1) + 1700000}",\
  "p":0.9,\
  "overhead":1000,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?"\
}
rheem.spark.union.load = {\
  "in":2, "out":1,\
  "cpu":"56789",\
  "ram":"0",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1)}"\
}

rheem.spark.broadcast.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.broadcast.load = {\
  "in":1, "out":1,\
  "cpu":"${5500*out0 + 56789}",\
  "ram":"${100*out0 + 12000}",\
  "disk":"0",\
  "net":"${9.5*in0 + 45000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.cache.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.cache.load = {\
  "in":1, "out":1,\
  "cpu":"${4000*out0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.spark.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${5000*in3 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2 + in3)}"\
}

rheem.spark.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.while.load = {\
  "in":3, "out":2,\
  "cpu":"${4000*in2 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0 + in1 + in2)}"\
}


rheem.spark.repeat.load.template = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.spark.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.spark.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${400*out0 + 56789}",\
  "ram":"${100*out0 + 2000}",\
  "disk":"0",\
  "net":"0",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${100*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${4000*in0 + 56789}",\
  "ram":"10000",\
  "disk":"0",\
  "net":"${4.5*in0 + 43000}",\
  "p":0.9,\
  "overhead":5,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.textfilesource.load.prepare.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.spark.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${50056789}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}
rheem.spark.textfilesource.load.main.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${500*out0}",\
  "ram":"${10}",\
  "disk":"${0}",\
  "net":"${0}",\
  "p":0.9,\
  "overhead":0,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}


rheem.spark.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.spark.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${700*out0 + 56789}",\
  "ram":"${10*out0}",\
  "disk":"${out0/10}",\
  "net":"${out0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, out0)}"\
}

rheem.spark.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.spark.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${500*in0 + 56789}",\
  "ram":"${10*in0}",\
  "disk":"${in0/10}",\
  "net":"${in0 * 10 + 5000000}",\
  "p":0.9,\
  "overhead":10,\
  "ru":"${rheem:logGrowth(0.1, 0.1, 1000000, in0)}"\
}

rheem.spark.pagerank.load.main.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.spark.pagerank.load.main = {\
 "in":1,\
 "out":1,\
 "cpu":"${5000*in0 + 2500*out0 + 1E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.pagerank.load.output.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0"\
}
rheem.spark.pagerank.load.output = {\
 "in":1,\
 "out":1,\
 "cpu":"0",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}


rheem.java.map.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.map.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.filter.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.filter.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"100000",\
  "p":0.9\
}

rheem.java.flatmap.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.flatmap.load = {\
  "in":1, "out":1,\
  "cpu":"${563*in0 + 100511687}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.random-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.random-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.reservoir-sample.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reservoir-sample.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.mappartitions.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.mappartitions.load = {\
  "in":1, "out":1,\
  "cpu":"${55*in0 + 380000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.reduceby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.reduceby.load = {\
  "in":1, "out":1,\
  "cpu":"${700*in0 + 1040*out0 + 1100000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.groupby.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.groupby.load = {\
  "in":1, "out":1,\
  "cpu":"${1200*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.sort.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.sort.load = {\
  "in":1, "out":1,\
  "cpu":"${2000*in0 + 330000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.globalreduce.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalreduce.load = {\
  "in":1, "out":1,\
  "cpu":"${25*in0 + 350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.globalgroup.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.globalgroup.load = {\
  "in":1, "out":1,\
  "cpu":"${350000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.count.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.count.load = {\
  "in":1, "out":1,\
  "cpu":"${4*in0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.distinct.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.distinct.load = {\
  "in":1, "out":1,\
  "cpu":"${200*in0 + 700*out0 + 330000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.join.load.indexing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.join.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.join.load.probing.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.join.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cogroup.load.pattern {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*(in0 + in1) + ?*out0 + ?"\
}
rheem.java.cogroup.load = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.intersect.load.indexing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * min(in0, in1)"\
}
rheem.java.intersect.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.intersect.load.probing.pattern = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"? * max(in0, in1)"\
}
rheem.java.intersect.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${1000*(in0 + in1) + 200*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.cartesian.load.indexing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*min(in0, in1)",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.indexing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0*in1",\
  "ram":"0",\
  "p":0.9\
}
rheem.java.cartesian.load.probing = {\
  "in":2, "out":1,\
  "cpu":"${21*out0 + 900000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.union.load.template = {\
  "type":"mathex", "in":2, "out":1,\
  "cpu":"?*in0"\
}
rheem.java.union.load = {\
  "in":2, "out":1,\
  "cpu":"200000",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.collect.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.collect.load = {\
  "in":1, "out":1,\
  "cpu":"${25*out0 + 350000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.loop.load.template = {\
  "type":"mathex", "in":4, "out":3,\
  "cpu":"?*in3 + ?"\
}
rheem.java.loop.load = {\
  "in":4, "out":3,\
  "cpu":"${500*in3 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.while.load.template = {\
  "type":"mathex", "in":3, "out":2,\
  "cpu":"?*in2 + ?"\
}
rheem.java.while.load = {\
  "in":3, "out":2,\
  "cpu":"${500*in2 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.repeat.load.tedmplate = {\
  "type":"mathex", "in":2, "out":2,\
  "cpu":"?"\
}
rheem.java.repeat.load = {\
  "in":2, "out":2,\
  "cpu":"${810000}",\
  "ram":"10000",\
  "p":0.9\
}

rheem.java.collectionsource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.collectionsource.load = {\
  "in":0, "out":1,\
  "cpu":"${4*out0 + 1000000}",\
  "ram":"0",\
  "p":0.9\
}

rheem.java.localcallbacksink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0"\
}
rheem.java.localcallbacksink.load = {\
  "in":1, "out":0,\
  "cpu":"${28*in0 + 810000}",\
  "ram":"10000",\
  "p":0.9\
}


rheem.java.textfilesource.load.prepare,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?"\
}
rheem.java.textfilesource.load.prepare = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}
rheem.java.textfilesource.load.main,pattern = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.textfilesource.load.main = {\
  "in":0, "out":1,\
  "cpu":"${425*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.objectfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.objectfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.objectfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${2000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256*in0}",\
  "net":"${0}",\
  "p":0.9\
}

rheem.java.tsvfilesource.load.template = {\
  "type":"mathex", "in":0, "out":1,\
  "cpu":"?*out0 + ?"\
}
rheem.java.tsvfilesource.load = {\
  "in":0, "out":1,\
  "cpu":"${1500*out0 + 1400000}",\
  "ram":"${100*out0}",\
  "p":0.9\
}

rheem.java.tsvfilesink.load.template = {\
  "type":"mathex", "in":1, "out":0,\
  "cpu":"?*in0 + ?"\
}
rheem.java.tsvfilesink.load = {\
  "in":1, "out":0,\
  "cpu":"${1000*in0 + 810000}",\
  "ram":"0",\
  "disk":"${256 * in0}",\
  "net":"0",\
  "p":0.9\
}

rheem.java.pagerank.load.template = {\
  "type":"mathex", "in":1, "out":1,\
  "cpu":"?*in0 + ?*in0*numIterations + ?"\
}
rheem.java.pagerank.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${521.029270294375*in0 + 2663.526789785403*out0 + 1.2775981739537635E8}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}

