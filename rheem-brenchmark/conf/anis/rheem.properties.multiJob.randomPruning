#ettings for Spark
spark.master = spark://10.2.5.231:7077
rheem.spark.machines = 10
rheem.spark.cores-per-machine = 4
spark.executor.memory = 30g
spark.eventLog.enabled = false
spark.eventLog.dir = hdfs://10.2.5.231:8020/tmp/spark-events
spark.app.name = Example
spark.driver.maxResultSize=4g

rheem.core.optimizer.pruning.strategies = org.qcri.rheem.core.optimizer.enumeration.SinglePlatformPruningStrategy
#rheem.core.optimizer.pruning.strategies = org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy
#rheem.core.optimizer.pruning.strategies = org.qcri.rheem.core.optimizer.enumeration.RandomPruningStrategy
rheem.core.optimizer.reoptimize = false
rheem.core.optimizer.instrumentation = org.qcri.rheem.core.profiling.FullInstrumentationStrategy
rheem.core.log.enabled = true
rheem.core.log.executions = /root/anis/logs/rheem/executions.json
rheem.core.log.cardinalities = /root/anis/logs/rheem/cardinalities.json

rheem.apps.tpch.csv.pagelines = hdfs://10.2.5.231:8020/user/atroudi/data/csv/pagelinks.csv
rheem.postgres.jdbc.url = jdbc:postgresql://localhost/wordcountDB
rheem.postgres.jdbc.user = postgres
rheem.postgres.jdbc.password = root

tpch.orders = hdfs://10.2.5.231:8020/user/atroudi/data/orders.tbl

#rheem.profiler.datagen.url = file:///root/anis/data.txt
rheem.profiler.datagen.url = hdfs://10.2.5.231:8020/user/atroudi/data/long_cleaned_abstracts_en_10.tql
rheem.profiling.operatorEvaluation = true


#rheem.sqlite3.jdbc.url = jdbc:sqlite:hdfs:///user/atroudi/data/tpch.db
#rheem.sqlite3.jdbc.url = jdbc:sqlite:hdfs:///user/atroudi/data/pagelinksDB.db



rheem.spark.init.ms = 3828
rheem.java.globalgroup.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(7.484867081347327E-9)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.32206626130157E-4)*(in0))+(6.769215009466128E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.sqlite3.sqltostream.load.query = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((5.757078257171878E-4)*(out0))+(3.496818912700298)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.objectfilesink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"((0.04407880258160157)*(in0))+(1.7963791842516155E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.broadcast.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((0.010865168144945416)*(in0))+(1.2720243745352114E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.zipwithid.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.0469387611630164E-4)*(in0))+(27.758155137715086)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(2.0453541378190153E-4)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.cache.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((249534.25578046433)*(in0))+(0.15415114844946443)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"((1392715.4721003752)*(in0))+(342930.90760995867)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((0.07299424360896109)*(in0))+(3.5239227330727974E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.sqlite3.sqltostream.load.output = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(13325.02751534206)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((70064.60694398597)*(out0))+(253.60452557569675)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.main = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"(290599.2549777361)*(out0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.join.load = {\
 "type":"mathex",\
 "in":2,\
 "out":1,\
 "cpu":"(((61911.0635259931)*((in0)+(in1)))+((1.5829268774041894)*(out0)))+(6.440421574372958E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.map.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(301.680787923012)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.repeat.load = {\
 "type":"mathex",\
 "in":2,\
 "out":2,\
 "cpu":"0.006603736263546948",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.flatmap.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(268061.9385224082)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((1.1168220169820601E-5)*(in0))+(6.845205561706852E9)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.reduceby.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((36159.77038493583)*(in0))+(2.067034147902013E7)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.collect.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((5.605498494929736E-7)*(out0))+(1.2094006265190399E8)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.globalgroup.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"((0.0018132241615123712)*(in0))+(4255.240846137185)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.textfilesource.load.prepare = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"6.4709455887202896E10",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.objectfilesource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"((1.564381032229326)*(out0))+(773.3862454474978)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.spark.collectionsource.load = {\
 "type":"mathex",\
 "in":0,\
 "out":1,\
 "cpu":"((199085.60223969325)*(out0))+(3.85220841242804E10)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.localcallbacksink.load = {\
 "type":"mathex",\
 "in":1,\
 "out":0,\
 "cpu":"(202.13308213132848)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.filter.load = {\
 "type":"mathex",\
 "in":1,\
 "out":1,\
 "cpu":"(0.271522941876044)*(in0)",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
